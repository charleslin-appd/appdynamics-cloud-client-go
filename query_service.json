{
  "openapi": "3.0.3",
  "info": {
    "title": "AppDynamics Cloud Query Service API",
    "version": "1.0",
    "license": {
      "name": "AppDynamics",
      "url": "https://www.appdynamics.com"
    },
    "description": "An API providing access to observation data using an AppDynamics domain-specific language.\n\nThe language is declarative, read-only (it does not allow for data modification) and specific to the AppD MELT model.\nIt presents MELT data (metrics, events, logs, traces) and State in the scope of monitored topology."
  },
  "servers": [
    {
      "url": "https://{tenant-name}.observe.appdynamics.com/monitoring/v1",
      "description": "Production environment",
      "variables": {
        "tenant-name": {
          "description": "Tenant name",
          "default": "customer1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "ExecuteQuery"
    },
    {
      "name": "ResultPagination"
    }
  ],
  "x-visibility-level": "external",
  "x-doc-visibility-level": "private",
  "paths": {
    "/query/execute": {
      "post": {
        "tags": [
          "ExecuteQuery"
        ],
        "summary": "Execute a query to fetch observation data.",
        "description": "Execute a query to fetch observation data.",
        "operationId": "executeQuery",
        "requestBody": {
          "description": "A simple JSON object containing a query string.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequestBody"
              },
              "examples": {
                "Execute a query": {
                  "description": "Execute a simple query.",
                  "value": {
                    "query": "fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/query/continue": {
      "get": {
        "tags": [
          "ResultPagination"
        ],
        "summary": "Fetch the next page of results.",
        "description": "Fetch the next page of results.",
        "operationId": "resultPagination",
        "parameters": [
          {
            "name": "cursor",
            "description": "An opaque string which will allow the retrieval of the next page of results. The cursor is obtained from a previous query response.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ewogICJza2lwIiA6IDEwMDAsCiAgInF1ZXJ5IiA6ICJGRVRDSFxuICAgIGlkLFxuICAgIGhlYWx0aF9hc19"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "200": {
        "description": "The API returns a chunked response with a sequence of objects. The first object describes the model of the returned data.\nThe model is followed by a series of datasets of actual values or error objects indicating problems during query execution.",
        "headers": {
          "transfer-encoding": {
            "schema": {
              "type": "string"
            },
            "description": "chunked"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QueryResponseArrayBody"
            },
            "examples": {
              "Response as a JSON array": {
                "value": "[\n  {\n    \"type\": \"model\",\n    \"model\": {\n      \"name\": \"m:main\",\n      \"fields\": [\n        {\n          \"alias\": \"id\",\n          \"type\": \"string\",\n          \"hints\": {\n            \"kind\": \"entity\",\n            \"field\": \"id\",\n            \"type\": \"apm:service_instance\"\n          }\n        },\n        {\n          \"alias\": \"name\",\n          \"type\": \"string\",\n          \"hints\": {}\n        },\n        {\n          \"alias\": \"cpm\",\n          \"type\": \"complex\",\n          \"hints\": {\n            \"kind\": \"metric\",\n            \"type\": \"apm:response_time\"\n          },\n          \"form\": \"reference\",\n          \"model\": {\n            \"name\": \"m:cpm\",\n            \"fields\": [\n              {\n                \"alias\": \"source\",\n                \"type\": \"string\",\n                \"hints\": {\n                  \"kind\": \"metric\",\n                  \"field\": \"source\",\n                  \"type\": \"apm:response_time\"\n                }\n              },\n              {\n                \"alias\": \"cpm\",\n                \"type\": \"timeseries\",\n                \"hints\": {\n                  \"kind\": \"metric\",\n                  \"type\": \"apm:response_time\"\n                },\n                \"form\": \"inline\",\n                \"model\": {\n                  \"name\": \"m:cpm_2\",\n                  \"fields\": [\n                    {\n                      \"alias\": \"timestamp\",\n                      \"type\": \"timestamp\",\n                      \"hints\": {\n                        \"kind\": \"metric\",\n                        \"field\": \"timestamp\",\n                        \"type\": \"apm:response_time\"\n                      }\n                    },\n                    {\n                      \"alias\": \"min\",\n                      \"type\": \"number\",\n                      \"hints\": {\n                        \"kind\": \"metric\",\n                        \"field\": \"min\",\n                        \"type\": \"apm:response_time\"\n                      }\n                    },\n                    {\n                      \"alias\": \"max\",\n                      \"type\": \"number\",\n                      \"hints\": {\n                        \"kind\": \"metric\",\n                        \"field\": \"max\",\n                        \"type\": \"apm:response_time\"\n                      }\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"type\": \"data\",\n    \"model\": {\n      \"$jsonPath\": \"$..[?(@.type == 'model')]..[?(@.name == 'm:main')]\",\n      \"$model\": \"m:main\"\n    },\n    \"metadata\": {\n      \"since\": \"2022-06-14T09:21:18.143353Z\",\n      \"until\": \"2022-06-17T09:21:18.143353Z\"\n    },\n    \"dataset\": \"d:main\",\n    \"data\": [\n      [\n        \"apm:service_instance:QkYwm51nMAeUADsp4uY6NA\",\n        \"Query Service\",\n        {\n          \"$dataset\": \"d:metrics-1\",\n          \"$jsonPath\": \"$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]\"\n        }\n      ]\n    ]\n  },\n  {\n    \"type\": \"heartbeat\"\n  },\n  {\n    \"type\": \"data\",\n    \"model\": {\n      \"$jsonPath\": \"$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]\",\n      \"$model\": \"m:cpm\"\n    },\n    \"metadata\": {\n      \"granularitySeconds\": 60\n    },\n    \"dataset\": \"d:metrics-1\",\n    \"data\": [\n      [\n        \"sys:derived\",\n        [\n          [\n            \"2022-06-16T10:00Z\",\n            470995,\n            53246567\n          ],\n          [\n            \"2022-06-16T11:00Z\",\n            460153,\n            94186816\n          ],\n          [\n            \"2022-06-16T12:00Z\",\n            460708,\n            81749730\n          ]\n        ]\n      ]\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"error\": {\n      \"timestamp\": \"2022-06-17T09:29:52.578280Z\",\n      \"errorCode\": \"MS-001\",\n      \"title\": \"General Error\",\n      \"detail\": \"Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])\",\n      \"traceId\": \"cb7d28a9c4cb41cb88f90db48149d78d\",\n      \"tenantId\": \"0baa5ce3-b54c-4153-b902-1208262aa3e1\",\n      \"query\": \"fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h\"\n    }\n  }\n]"
              }
            }
          },
          "application/x-ndjson": {
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ModelResultChunk"
                },
                {
                  "$ref": "#/components/schemas/DataResultChunk"
                },
                {
                  "$ref": "#/components/schemas/ErrorResultChunk"
                },
                {
                  "$ref": "#/components/schemas/HeartbeatResultChunk"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "model": "#/components/schemas/ModelResultChunk",
                  "data": "#/components/schemas/DataResultChunk",
                  "error": "#/components/schemas/ErrorResultChunk",
                  "heartbeat": "#/components/schemas/HeartbeatResultChunk"
                }
              }
            },
            "examples": {
              "(Part 1) Streamed JSON response as a sequence of newline-delimited JSON objects": {
                "description": "Each object is printed on a single line delimited by ASCII control character `\\n`.\nJSON objects in the example are indented for better readability.",
                "value": "{\n  \"type\": \"model\",\n  \"model\": {\n    \"name\": \"m:main\",\n    \"fields\": [\n      {\n        \"alias\": \"id\",\n        \"type\": \"string\",\n        \"hints\": {\n          \"kind\": \"entity\",\n          \"field\": \"id\",\n          \"type\": \"apm:service_instance\"\n        }\n      },\n      {\n        \"alias\": \"name\",\n        \"type\": \"string\",\n        \"hints\": {}\n      },\n      {\n        \"alias\": \"cpm\",\n        \"type\": \"complex\",\n        \"hints\": {\n          \"kind\": \"metric\",\n          \"type\": \"apm:response_time\"\n        },\n        \"form\": \"reference\",\n        \"model\": {\n          \"name\": \"m:cpm\",\n          \"fields\": [\n            {\n              \"alias\": \"source\",\n              \"type\": \"string\",\n              \"hints\": {\n                \"kind\": \"metric\",\n                \"field\": \"source\",\n                \"type\": \"apm:response_time\"\n              }\n            },\n            {\n              \"alias\": \"cpm\",\n              \"type\": \"timeseries\",\n              \"hints\": {\n                \"kind\": \"metric\",\n                \"type\": \"apm:response_time\"\n              },\n              \"form\": \"inline\",\n              \"model\": {\n                \"name\": \"m:cpm_2\",\n                \"fields\": [\n                  {\n                    \"alias\": \"timestamp\",\n                    \"type\": \"timestamp\",\n                    \"hints\": {\n                      \"kind\": \"metric\",\n                      \"field\": \"timestamp\",\n                      \"type\": \"apm:response_time\"\n                    }\n                  },\n                  {\n                    \"alias\": \"min\",\n                    \"type\": \"number\",\n                    \"hints\": {\n                      \"kind\": \"metric\",\n                      \"field\": \"min\",\n                      \"type\": \"apm:response_time\"\n                    }\n                  },\n                  {\n                    \"alias\": \"max\",\n                    \"type\": \"number\",\n                    \"hints\": {\n                      \"kind\": \"metric\",\n                      \"field\": \"max\",\n                      \"type\": \"apm:response_time\"\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}"
              },
              "(Part 2) Directly followed by next object in the body (Objects are not in an array)": {
                "description": "A chunk of type <em>data</em> might contain a pagination <em>_links</em> element which when followed will retrieve the next page of results.\nThe example given below is fictitious and does not represent a valid cursor.",
                "value": "{\n  \"type\": \"data\",\n  \"model\": {\n    \"$jsonPath\": \"$..[?(@.type == 'model')]..[?(@.name == 'm:main')]\",\n    \"$model\": \"m:main\"\n  },\n  \"metadata\": {\n    \"since\": \"2022-06-14T09:21:18.143353Z\",\n    \"until\": \"2022-06-17T09:21:18.143353Z\"\n  },\n  \"dataset\": \"d:main\",\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/monitoring/v1/query/continue?cursor=ewogICJza2lwIiA6IDEsCiAgInF1ZXJ5IiA6ICJmZXRjaCBpZDogaWQsIG5hbWU6IG\"\n    }\n  },\n  \"data\": [\n    [\n      \"apm:service_instance:QkYwm51nMAeUADsp4uY6NA\",\n      \"Query Service\",\n      {\n        \"$dataset\": \"d:metrics-1\",\n        \"$jsonPath\": \"$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]\"\n      }\n    ],\n    [\n      \"apm:service_instance:4Qb9EQ9QOHKcSA1l6w5ncQ\",\n      \"Query Service\",\n      {\n        \"$dataset\": \"d:metrics-2\",\n        \"$jsonPath\": \"$..[?(@.type == 'data' && @.dataset == 'd:metrics-2')]\"\n      }\n    ]\n  ]\n}"
              },
              "(Part 3) Datasets might be referenced from other datasets and might contain nested timeseries.": {
                "value": "{\n  \"type\": \"data\",\n  \"model\": {\n    \"$jsonPath\": \"$..[?(@.type == 'model')]..[?(@.name == 'm:cpm')]\",\n    \"$model\": \"m:cpm\"\n  },\n  \"metadata\": {\n    \"granularitySeconds\": 60\n  },\n  \"dataset\": \"d:metrics-1\",\n  \"data\": [\n    [\n      \"sys:derived\",\n      [\n        [\n          \"2022-06-16T10:00Z\",\n          470995,\n          53246567\n        ],\n        [\n          \"2022-06-16T11:00Z\",\n          460153,\n          94186816\n        ],\n        [\n          \"2022-06-16T12:00Z\",\n          460708,\n          81749730\n        ]\n      ]\n    ]\n  ]\n}"
              },
              "(Part 4) Possibly an error": {
                "value": "{\n  \"type\": \"error\",\n  \"error\": {\n    \"timestamp\": \"2022-06-17T09:29:52.578280Z\",\n    \"errorCode\": \"MS-001\",\n    \"title\": \"General Error\",\n    \"detail\": \"Metric data error (logged with TraceId: [cb7d28a9c4cb41cb88f90db48149d78d], SpanId: [c5937a4300964f2f])\",\n    \"traceId\": \"cb7d28a9c4cb41cb88f90db48149d78d\",\n    \"tenantId\": \"0baa5ce3-b54c-4153-b902-1208262aa3e1\",\n    \"query\": \"fetch id: id, name: attributes(service.name), cpm: metrics(apm:response_time) {source, timestamp, min, max} from entities(apm:service)[attributes(service.namespace) = 'Levitate'].out.to(apm:service_instance) since -3h\"\n  }\n}"
              },
              "(Part 5) Heartbeat if needed to make sure the connection is kept alive": {
                "value": "{\n  \"type\": \"heartbeat\"\n}"
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResult"
            },
            "example": {
              "type": "https://developer.cisco.com/docs/appdynamics/errors/#!input-validation",
              "timestamp": "2020-02-22T11:22:33.980629Z",
              "traceId": "fc3decb4bf674b7cb16c5f208fb1f18b",
              "title": "Query compilation failure!",
              "detail": "Unable to compile due to query semantic errors.",
              "tenantId": "47a01df9-54a0-472b-96b8-7c8f64eb7cbf",
              "query": "fetch id from (apm:serviceX)",
              "compilationErrors": [
                {
                  "message": "Unknown alias 'id'",
                  "fixSuggestion": "",
                  "fixPossibilities": [],
                  "errorType": "SEMANTIC",
                  "errorFrom": "1:6",
                  "errorTo": "1:7"
                },
                {
                  "message": "Referenced topology set has errors: 1:23-1:34",
                  "fixPossibilities": [],
                  "errorType": "SEMANTIC",
                  "errorFrom": "1:6",
                  "errorTo": "1:7"
                },
                {
                  "message": "No Type found in the Schema for apm:serviceX with any specified namespace or namespace common if none was specified",
                  "fixSuggestion": "Did you mean 'apm:service'?",
                  "fixPossibilities": [
                    "apm:service",
                    "apm:service_endpoint",
                    "apm:service_instance"
                  ],
                  "errorType": "SEMANTIC",
                  "errorFrom": "1:23",
                  "errorTo": "1:34"
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden"
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResult"
            },
            "example": {
              "type": "https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error",
              "timestamp": "2020-02-22T11:22:33.980629Z",
              "traceId": "fc3decb4bf674b7cb16c5f208fb1f18b",
              "title": "Internal Server Error",
              "detail": "Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)",
              "tenantId": "47a01df9-54a0-472b-96b8-7c8f64eb7cbf",
              "query": "fetch id from entities since 2022-06-02 until 2022-06-01"
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResult"
            },
            "example": {
              "type": "https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error",
              "timestamp": "2020-02-22T11:22:33.980629Z",
              "traceId": "fc3decb4bf674b7cb16c5f208fb1f18b",
              "title": "Service Unavailable",
              "detail": "Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)",
              "tenantId": "47a01df9-54a0-472b-96b8-7c8f64eb7cbf",
              "query": "fetch id from entities since 2022-06-02 until 2022-06-01"
            }
          }
        }
      }
    },
    "schemas": {
      "QueryRequestBody": {
        "description": "Client request with a query.",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Query string."
          }
        }
      },
      "QueryResponseArrayBody": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ModelResultChunk"
            },
            {
              "$ref": "#/components/schemas/DataResultChunk"
            },
            {
              "$ref": "#/components/schemas/ErrorResultChunk"
            },
            {
              "$ref": "#/components/schemas/HeartbeatResultChunk"
            }
          ]
        },
        "description": "The ModelResultChunk will be always the first item in the response array. The rest of the items might be a mix of DataResultChunk, ErrorResultChunk and HeartbeatResultChunk"
      },
      "ModelResultChunk": {
        "description": "A schema of the data to follow. This object can only be at the first position in the response.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Attribute identifying a response chunk as holding the response model.",
            "example": "model",
            "enum": [
              "model"
            ]
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          }
        }
      },
      "DataResultChunk": {
        "description": "A part of the result data. There may be multiple chunks of this type in the response.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Attribute identifying a response chunk holding data.",
            "example": "data",
            "enum": [
              "data"
            ]
          },
          "_links": {
            "$ref": "#/components/schemas/PaginationReference"
          },
          "dataset": {
            "type": "string",
            "description": "Name of the dataset. May be used as a reference in other datasets when returning multi dimensional data."
          },
          "model": {
            "$ref": "#/components/schemas/ModelReference"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataResultItem"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataResultItem"
            }
          }
        }
      },
      "ErrorResultChunk": {
        "description": "A signal that an error occurred during query execution.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Attribute identifying a response chunk as holding information of an error.",
            "example": "error",
            "enum": [
              "error"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "URI to the documentation of the error.",
                "example": "https://developer.cisco.com/docs/appdynamics/errors/#!internal-server-error"
              },
              "errorCode": {
                "type": "string",
                "description": "The code of the error.",
                "example": "SC-001"
              },
              "timestamp": {
                "type": "string",
                "description": "Time and date the `ErrorResultChunk` was created.",
                "format": "date-time",
                "example": "2020-02-22T11:22:33.980629Z"
              },
              "traceId": {
                "description": "It correlates events and logs messages across dependent services for single business transaction.",
                "type": "string",
                "example": "fc3decb4bf674b7cb16c5f208fb1f18b"
              },
              "title": {
                "type": "string",
                "description": "Brief description of the error.",
                "example": "Unexpected error happened"
              },
              "detail": {
                "type": "string",
                "description": "Usually more detailed description of the error.",
                "example": "Unexpected error happened (logged as 224397de-5843-4954-b092-37c84aead3c9)"
              },
              "query": {
                "type": "string",
                "description": "The input query.",
                "example": "fetch id from entities since 2022-06-02 until 2022-06-01"
              }
            }
          }
        }
      },
      "HeartbeatResultChunk": {
        "description": "An empty chunk sent to prevent the HTTP connection from being pre-maturely closed.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Attribute identifying a response chunk as a heartbeat.",
            "example": "heartbeat",
            "enum": [
              "heartbeat"
            ]
          }
        }
      },
      "ModelResultItem": {
        "description": "A description of a simple data type of a single fetched expression in the result.",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Specifies a type of the value in the JSON response.",
            "example": "'string', 'number', 'timestamp', ..."
          },
          "hints": {
            "$ref": "#/components/schemas/Hints"
          }
        }
      },
      "ComplexModelResultItem": {
        "description": "A description of a complex data type of a single fetched expression in the result.",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Specifies a type of the complex value. Individual fields are described in the 'model'.",
            "example": "'complex', 'timeseries' specifically for time series."
          },
          "hints": {
            "$ref": "#/components/schemas/Hints"
          },
          "form": {
            "type": "string",
            "description": "Describes where timeseries or complex objects are located in the response. Possible values are: inline, reference, link"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          }
        }
      },
      "Model": {
        "description": "A description of the schema of the data to follow in the DataResultChunks.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This name will be used by the following DataResultChunks as a reference to the description of their structure."
          },
          "fields": {
            "description": "An array of type descriptors for each fetched expression in the query.\nThe order of the array matches the order of values in the DataResultChunks with this schema model.'",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ModelResultItem"
                },
                {
                  "$ref": "#/components/schemas/ComplexModelResultItem"
                }
              ]
            }
          }
        }
      },
      "Hints": {
        "description": "Additional information about a single fetched expression from the query.",
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Type of observed component from AppD MELT Model.\nOptional, if applicable",
            "example": "'entity', 'metric', 'event', ..."
          },
          "field": {
            "type": "string",
            "description": "Name of the MELT model property mentioned in the 'kind' hint.\nSee AppD MELT Model \nOptional, if applicable (for example not for expression)",
            "example": "'value' when fetching a Property"
          },
          "type": {
            "type": "string",
            "description": "Full name with namespace of the type.",
            "example": "apm:service"
          }
        }
      },
      "MetadataResultItem": {
        "description": "Additional information collected for the data contained in the data chunk.",
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/MainMetadataResultItem"
          },
          {
            "$ref": "#/components/schemas/MetricMetadataResultItem"
          },
          {
            "$ref": "#/components/schemas/EventMetadataResultItem"
          }
        ]
      },
      "MainMetadataResultItem": {
        "description": "Metadata for the main data chunk.",
        "type": "object",
        "properties": {
          "since": {
            "type": "string",
            "description": "Specifies the start of the time range which was used for querying.",
            "example": "2022-05-24T10:18:22.12Z",
            "format": "date-time"
          },
          "until": {
            "type": "string",
            "description": "Specifies the end of the time range which was used for querying.",
            "example": "2022-05-24T11:18:22.12Z",
            "format": "date-time"
          }
        }
      },
      "MetricMetadataResultItem": {
        "description": "Metadata for a metric data chunk.",
        "type": "object",
        "properties": {
          "granularitySeconds": {
            "type": "number",
            "description": "Actual granularity of metric data points.\nThe value is the length of the time interval of a single data point."
          }
        }
      },
      "EventMetadataResultItem": {
        "description": "Metadata for an event data chunk.",
        "type": "object",
        "properties": {
          "schema": {
            "type": "object",
            "description": "Arbitrary map of keys and values associated with the event data."
          },
          "statistics": {
            "type": "object",
            "description": "Arbitrary map of statistics associated with the event data."
          }
        }
      },
      "DataResultItem": {
        "description": "A row of values with mixed data types based on the fetched expressions.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/components/schemas/DatasetReference"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "DatasetReference": {
        "description": "A reference to a specific dataset.",
        "type": "object",
        "properties": {
          "$dataset": {
            "type": "string",
            "description": "Unique name of the dataset.",
            "example": "d:metrics-1"
          },
          "$jsonPath": {
            "type": "string",
            "description": "JSON Path that filters the correct dataset from the list of all datasets.",
            "example": "$..[?(@.type == 'data' && @.dataset == 'd:metrics-1')]"
          }
        }
      },
      "PaginationReference": {
        "description": "A reference to the next page of results if there are more results to be had.",
        "type": "object",
        "properties": {
          "next": {
            "type": "object",
            "description": "Holds the link to the next page of results.",
            "properties": {
              "href": {
                "type": "string",
                "description": "The effective link to the next result page",
                "example": "/monitoring/v1/query/continue?cursor=ewogICJza2lwIiA6IDEwMDAsCiAgInF1ZXJ5IiA6ICJGRVRDSFxuICAgIGlkLFxuICAgIGhlYWx0aF9hc19"
              }
            }
          }
        }
      },
      "ModelReference": {
        "description": "A reference to a specific model.",
        "type": "object",
        "properties": {
          "$model": {
            "type": "string",
            "description": "A unique model name.",
            "example": "m:main"
          },
          "$jsonPath": {
            "type": "string",
            "description": "JSON Path that filters the correct model from the ModelResultChunk.",
            "example": "$..[?(@.type == 'model')]..[?(@.name == 'm:main')]"
          }
        }
      },
      "ErrorResult": {
        "description": "A representation of an error that occurred during query execution. It contains at least brief a description\nof the error and contextual information of the corresponding request.",
        "type": "object",
        "required": [
          "type",
          "timestamp",
          "traceId",
          "title",
          "detail",
          "tenantId",
          "query"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "URI to the documentation of the error."
          },
          "errorCode": {
            "type": "string",
            "description": "The code of a error.",
            "example": "SC-001"
          },
          "timestamp": {
            "type": "string",
            "description": "Time and date the error occurred.",
            "format": "date-time",
            "example": "2020-02-22T11:22:33.980629Z"
          },
          "traceId": {
            "description": "Id to correlate events and logs across dependent services for a single query.",
            "type": "string",
            "example": "fc3decb4bf674b7cb16c5f208fb1f18b"
          },
          "title": {
            "type": "string",
            "description": "Brief description of the error.",
            "example": "Query compilation failure!"
          },
          "detail": {
            "type": "string",
            "description": "Usually a more detailed description of the error.",
            "example": "Unable to compile due to query semantic errors. (logged with TraceId: [467345r43535e4246f9a895c44636076bf0], SpanId: [8c3345345b273d43])"
          },
          "tenantId": {
            "type": "string",
            "description": "The id of a tenant for which the query was executed.",
            "example": "47a01df9-54a0-472b-96b8-7c8f64eb7cbf"
          },
          "query": {
            "type": "string",
            "description": "The input query.",
            "example": "fetch id from entities since 2022-06-02 until 2022-06-01"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/ErrorDetailsArray"
          }
        }
      },
      "ErrorDetailsArray": {
        "description": "An array containing the details of an error.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ErrorDetailItem"
            }
          ]
        }
      },
      "ErrorDetailItem": {
        "description": "A detailed description of the error.",
        "type": "object",
        "required": [
          "message",
          "fixPossibilities",
          "errorType",
          "errorFrom",
          "errorTo"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "A short description on error cause.",
            "example": "Unknown alias 'id'"
          },
          "fixSuggestion": {
            "type": "string",
            "description": "A hint to resolve the error.",
            "example": "Did you mean 'apm:service_endpoint'?"
          },
          "fixPossibilities": {
            "type": "array",
            "description": "A list of fix possibilities to resolve the error.",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "example": "apm:backend"
                }
              ]
            }
          },
          "errorType": {
            "type": "string",
            "description": "The type of the error.",
            "example": "SEMANTIC",
            "enum": [
              "SEMANTIC",
              "SYNTAX"
            ]
          },
          "errorFrom": {
            "type": "string",
            "description": "The start position of the error in format 'lineNum:charIdx'.",
            "example": "1:6"
          },
          "errorTo": {
            "type": "string",
            "description": "The end position of the error in format 'lineNum:charIdx'.",
            "example": "1:7"
          }
        }
      }
    }
  }
}
